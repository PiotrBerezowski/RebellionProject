//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.MyServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyServiceReference.IRebellionDatabase")]
    public interface IRebellionDatabase {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/ViewGroupDatabase", ReplyAction="http://tempuri.org/IRebellionDatabase/ViewGroupDatabaseResponse")]
        System.Collections.Generic.Dictionary<int, string> ViewGroupDatabase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/ViewGroupDatabase", ReplyAction="http://tempuri.org/IRebellionDatabase/ViewGroupDatabaseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> ViewGroupDatabaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/CreateNewGroup", ReplyAction="http://tempuri.org/IRebellionDatabase/CreateNewGroupResponse")]
        void CreateNewGroup(string GroupName, int GroupID, string Territory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/CreateNewGroup", ReplyAction="http://tempuri.org/IRebellionDatabase/CreateNewGroupResponse")]
        System.Threading.Tasks.Task CreateNewGroupAsync(string GroupName, int GroupID, string Territory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/CreateNewMission", ReplyAction="http://tempuri.org/IRebellionDatabase/CreateNewMissionResponse")]
        void CreateNewMission(string MissionName, int MissionID, string Type, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/CreateNewMission", ReplyAction="http://tempuri.org/IRebellionDatabase/CreateNewMissionResponse")]
        System.Threading.Tasks.Task CreateNewMissionAsync(string MissionName, int MissionID, string Type, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/createNewRebel", ReplyAction="http://tempuri.org/IRebellionDatabase/createNewRebelResponse")]
        void createNewRebel(string Codename, int RebelID, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/createNewRebel", ReplyAction="http://tempuri.org/IRebellionDatabase/createNewRebelResponse")]
        System.Threading.Tasks.Task createNewRebelAsync(string Codename, int RebelID, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/DeleteRebel", ReplyAction="http://tempuri.org/IRebellionDatabase/DeleteRebelResponse")]
        string DeleteRebel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/DeleteRebel", ReplyAction="http://tempuri.org/IRebellionDatabase/DeleteRebelResponse")]
        System.Threading.Tasks.Task<string> DeleteRebelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/FindGroup", ReplyAction="http://tempuri.org/IRebellionDatabase/FindGroupResponse")]
        string FindGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/FindGroup", ReplyAction="http://tempuri.org/IRebellionDatabase/FindGroupResponse")]
        System.Threading.Tasks.Task<string> FindGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/FindMission", ReplyAction="http://tempuri.org/IRebellionDatabase/FindMissionResponse")]
        string FindMission(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/FindMission", ReplyAction="http://tempuri.org/IRebellionDatabase/FindMissionResponse")]
        System.Threading.Tasks.Task<string> FindMissionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/FindRebel", ReplyAction="http://tempuri.org/IRebellionDatabase/FindRebelResponse")]
        string FindRebel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/FindRebel", ReplyAction="http://tempuri.org/IRebellionDatabase/FindRebelResponse")]
        System.Threading.Tasks.Task<string> FindRebelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/UpdateAGroup", ReplyAction="http://tempuri.org/IRebellionDatabase/UpdateAGroupResponse")]
        void UpdateAGroup(string GroupName, int GroupID, string Territory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/UpdateAGroup", ReplyAction="http://tempuri.org/IRebellionDatabase/UpdateAGroupResponse")]
        System.Threading.Tasks.Task UpdateAGroupAsync(string GroupName, int GroupID, string Territory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/UpdateAMission", ReplyAction="http://tempuri.org/IRebellionDatabase/UpdateAMissionResponse")]
        void UpdateAMission(string MissionName, int MissionID, string Type, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/UpdateAMission", ReplyAction="http://tempuri.org/IRebellionDatabase/UpdateAMissionResponse")]
        System.Threading.Tasks.Task UpdateAMissionAsync(string MissionName, int MissionID, string Type, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/UpdateARebel", ReplyAction="http://tempuri.org/IRebellionDatabase/UpdateARebelResponse")]
        void UpdateARebel(string NewName, int ID, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRebellionDatabase/UpdateARebel", ReplyAction="http://tempuri.org/IRebellionDatabase/UpdateARebelResponse")]
        System.Threading.Tasks.Task UpdateARebelAsync(string NewName, int ID, int GroupID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRebellionDatabaseChannel : GUI.MyServiceReference.IRebellionDatabase, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RebellionDatabaseClient : System.ServiceModel.ClientBase<GUI.MyServiceReference.IRebellionDatabase>, GUI.MyServiceReference.IRebellionDatabase {
        
        public RebellionDatabaseClient() {
        }
        
        public RebellionDatabaseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RebellionDatabaseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RebellionDatabaseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RebellionDatabaseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<int, string> ViewGroupDatabase() {
            return base.Channel.ViewGroupDatabase();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> ViewGroupDatabaseAsync() {
            return base.Channel.ViewGroupDatabaseAsync();
        }
        
        public void CreateNewGroup(string GroupName, int GroupID, string Territory) {
            base.Channel.CreateNewGroup(GroupName, GroupID, Territory);
        }
        
        public System.Threading.Tasks.Task CreateNewGroupAsync(string GroupName, int GroupID, string Territory) {
            return base.Channel.CreateNewGroupAsync(GroupName, GroupID, Territory);
        }
        
        public void CreateNewMission(string MissionName, int MissionID, string Type, int GroupID) {
            base.Channel.CreateNewMission(MissionName, MissionID, Type, GroupID);
        }
        
        public System.Threading.Tasks.Task CreateNewMissionAsync(string MissionName, int MissionID, string Type, int GroupID) {
            return base.Channel.CreateNewMissionAsync(MissionName, MissionID, Type, GroupID);
        }
        
        public void createNewRebel(string Codename, int RebelID, int GroupID) {
            base.Channel.createNewRebel(Codename, RebelID, GroupID);
        }
        
        public System.Threading.Tasks.Task createNewRebelAsync(string Codename, int RebelID, int GroupID) {
            return base.Channel.createNewRebelAsync(Codename, RebelID, GroupID);
        }
        
        public string DeleteRebel(int id) {
            return base.Channel.DeleteRebel(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRebelAsync(int id) {
            return base.Channel.DeleteRebelAsync(id);
        }
        
        public string FindGroup(int id) {
            return base.Channel.FindGroup(id);
        }
        
        public System.Threading.Tasks.Task<string> FindGroupAsync(int id) {
            return base.Channel.FindGroupAsync(id);
        }
        
        public string FindMission(int id) {
            return base.Channel.FindMission(id);
        }
        
        public System.Threading.Tasks.Task<string> FindMissionAsync(int id) {
            return base.Channel.FindMissionAsync(id);
        }
        
        public string FindRebel(int id) {
            return base.Channel.FindRebel(id);
        }
        
        public System.Threading.Tasks.Task<string> FindRebelAsync(int id) {
            return base.Channel.FindRebelAsync(id);
        }
        
        public void UpdateAGroup(string GroupName, int GroupID, string Territory) {
            base.Channel.UpdateAGroup(GroupName, GroupID, Territory);
        }
        
        public System.Threading.Tasks.Task UpdateAGroupAsync(string GroupName, int GroupID, string Territory) {
            return base.Channel.UpdateAGroupAsync(GroupName, GroupID, Territory);
        }
        
        public void UpdateAMission(string MissionName, int MissionID, string Type, int GroupID) {
            base.Channel.UpdateAMission(MissionName, MissionID, Type, GroupID);
        }
        
        public System.Threading.Tasks.Task UpdateAMissionAsync(string MissionName, int MissionID, string Type, int GroupID) {
            return base.Channel.UpdateAMissionAsync(MissionName, MissionID, Type, GroupID);
        }
        
        public void UpdateARebel(string NewName, int ID, int GroupID) {
            base.Channel.UpdateARebel(NewName, ID, GroupID);
        }
        
        public System.Threading.Tasks.Task UpdateARebelAsync(string NewName, int ID, int GroupID) {
            return base.Channel.UpdateARebelAsync(NewName, ID, GroupID);
        }
    }
}
